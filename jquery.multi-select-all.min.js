/**
 * jquery.multi-select-all.js
 * Original work by mySociety
 * https://github.com/mysociety/jquery-multi-select
 * 
 * This logic was forked in order to be able to add an "All" option that can be passed when instantiated as well as an 
 * "onClose" callback function for whne the selection's menu listing is closed. If your multi-select element has an option 
 * to select all, you can set the "allOptionValue" to the string value of this option. 
 * 
 * When selecting this "All" option, all other options will be deselected. Upon selecting another option, the "All"
 * option will be deselected.
 * 
    For example:

    $('select').multiSelect({
        allOptionValue: "All",
        onClose: function() {
            alert("Menu closed!")
        }
    });
 */
!function($){"use strict";var pluginName="multiSelect",defaults={containerHTML:'<div class="multi-select-container">',menuHTML:'<div class="multi-select-menu">',buttonHTML:'<span class="multi-select-button">',menuItemsHTML:'<div class="multi-select-menuitems">',menuItemHTML:'<label class="multi-select-menuitem">',presetsHTML:'<div class="multi-select-presets">',modalHTML:void 0,menuItemTitleClass:"multi-select-menuitem--titled",activeClass:"multi-select-container--open",noneText:"-- Select --",allText:void 0,presets:void 0,positionedMenuClass:"multi-select-container--positioned",positionMenuWithin:void 0,viewportBottomGutter:20,menuMinHeight:200,allOptionValue:void 0,onClose:void 0},dataAttrName="multiselect_"+Math.floor(10001*Math.random()),itemsLoadState=void 0,itemsCloseState=void 0;function MultiSelect(element,options){this.element=element,this.$element=$(element),this.settings=$.extend({},defaults,options),this._defaults=defaults,this._name=pluginName,this.init()}function arraysAreEqual(array1,array2){if(array1.length!=array2.length)return!1;array1.sort(),array2.sort();for(var i=0;i<array1.length;i++)if(array1[i]!==array2[i])return!1;return!0}$.extend(MultiSelect.prototype,{init:function(){this.checkSuitableInput(),this.findLabels(),this.constructContainer(),this.constructButton(),this.constructMenu(),this.constructModal(),this.setUpBodyClickListener(),this.setUpLabelsClickListener(),this.$element.hide()},checkSuitableInput:function(text){if(!1===this.$element.is("select[multiple]"))throw new Error("$.multiSelect only works on <select multiple> elements")},findLabels:function(){this.$labels=$('label[for="'+this.$element.attr("id")+'"]')},constructContainer:function(){this.$container=$(this.settings.containerHTML),this.$container.attr("data-instance",dataAttrName),this.$element.data("multi-select-container",this.$container),this.$container.insertAfter(this.$element),this.$menuItems=$(this.settings.menuItemsHTML)},constructButton:function(){var _this=this;this.$button=$(this.settings.buttonHTML),this.$button.attr({role:"button","aria-haspopup":"true",tabindex:0,"aria-label":this.$labels.eq(0).text()}).on("keydown.multiselect",(function(e){var key=e.which,returnKey=13,escapeKey=27,spaceKey=32,downArrow=40;if(13===key||32===key)e.preventDefault(),_this.$button.click();else if(40===key){var group;e.preventDefault(),_this.menuShow(),(_this.$presets||_this.$menuItems).children(":first").focus()}else 27===key&&_this.menuHide()})).on("click.multiselect",(function(e){_this.menuToggle()})).appendTo(this.$container),this.$element.on("change.multiselect",(function(e){_this.updateButtonContents(e.target.text)})),this.updateButtonContents()},updateButtonContents:function(optionText){var _this=this,options=[],selected=[];this.$element.find("option").each((function(){var text=$(this).text();options.push(text),$(this).is(":selected")&&text!=_this.settings.allOptionValue&&selected.push($.trim(text))})),this.$button.empty(),0==selected.length?this.$button.text(this.settings.noneText):selected.length===options.length&&this.settings.allText?this.$button.text(this.settings.allText):void 0!==this.settings.allOptionValue&&optionText===this.settings.allOptionValue?(this.$element.find("option").each((function(){$(this).text()!=optionText&&$(this).prop("selected",!1)})),this.$button.empty(),this.$button.text(this.settings.allText||optionText),_this.updateMenuItems()):(this.$element.find("option").each((function(){$(this).text()==_this.settings.allOptionValue&&$(this).prop("selected",!1)})),_this.updateMenuItems(),this.$button.text(selected.join(", ")))},constructMenu:function(){var _this=this;this.$menu=$(this.settings.menuHTML),this.$menu.attr({role:"menu"}).on("keyup.multiselect",(function(e){var key,escapeKey=27;27===e.which&&(_this.menuHide(),_this.$button.focus())})).appendTo(this.$container),this.constructMenuItems(),this.settings.presets&&this.constructPresets()},constructMenuItems:function(){var _this=this;this.$menu.append(this.$menuItems),this.$element.on("change.multiselect",(function(e,internal){!0!==internal&&_this.updateMenuItems()})),this.updateMenuItems()},updateItemsState:function(onOpen){var _this=this,elementState=[];this.$element.children("optgroup,option").each((function(index,element){var $item;"OPTION"===element.nodeName&&($item=_this.constructMenuItem($(element),index),elementState.push($item[0].childNodes[0].checked))})),onOpen?_this.itemsLoadState=elementState:_this.itemsCloseState=elementState},updateMenuItems:function(){var _this=this;this.$menuItems.empty(),this.$element.children("optgroup,option").each((function(index,element){var $item;"OPTION"===element.nodeName?($item=_this.constructMenuItem($(element),index),_this.$menuItems.append($item)):_this.constructMenuItemsGroup($(element),index)}))},upDown:function(type,e){var key=e.which,upArrow=38,downArrow=40;if(38===key){e.preventDefault();var prev=$(e.currentTarget).prev();prev.length?prev.focus():this.$presets&&"menuitem"===type?this.$presets.children(":last").focus():this.$button.focus()}else if(40===key){e.preventDefault();var next=$(e.currentTarget).next();next.length||"menuitem"===type?next.focus():this.$menuItems.children(":first").focus()}},constructPresets:function(){var _this=this;this.$presets=$(this.settings.presetsHTML),this.$menu.prepend(this.$presets),$.each(this.settings.presets,(function(i,preset){var unique_id=_this.$element.attr("name")+"_preset_"+i,$item=$(_this.settings.menuItemHTML).attr({for:unique_id,role:"menuitem"}).text(" "+preset.name).on("keydown.multiselect",_this.upDown.bind(_this,"preset")).appendTo(_this.$presets),$input;$("<input>").attr({type:"radio",name:_this.$element.attr("name")+"_presets",id:unique_id}).prependTo($item).on("change.multiselect",(function(){_this.$element.val(preset.options),_this.$element.trigger("change")}))})),this.$element.on("change.multiselect",(function(){_this.updatePresets()})),this.updatePresets()},updatePresets:function(){var _this=this;$.each(this.settings.presets,(function(i,preset){var unique_id=_this.$element.attr("name")+"_preset_"+i,$input=_this.$presets.find("#"+unique_id);arraysAreEqual(preset.options||[],_this.$element.val()||[])?$input.prop("checked",!0):$input.prop("checked",!1)}))},constructMenuItemsGroup:function($optgroup,optgroup_index){var _this=this;$optgroup.children("option").each((function(option_index,option){var $item=_this.constructMenuItem($(option),optgroup_index+"_"+option_index),cls=_this.settings.menuItemTitleClass;0!==option_index&&(cls+="sr"),$item.addClass(cls).attr("data-group-title",$optgroup.attr("label")),_this.$menuItems.append($item)}))},constructMenuItem:function($option,option_index){var unique_id=this.$element.attr("name")+"_"+option_index,$item=$(this.settings.menuItemHTML).attr({for:unique_id,role:"menuitem"}).on("keydown.multiselect",this.upDown.bind(this,"menuitem")).text(" "+$option.text()),$input=$("<input>").attr({type:"checkbox",id:unique_id,value:$option.val()}).prependTo($item);return $option.is(":disabled")&&$input.attr("disabled","disabled"),$option.is(":selected")&&$input.prop("checked","checked"),$input.on("change.multiselect",(function(){$(this).prop("checked")?$option.prop("selected",!0):$option.prop("selected",!1),$option.trigger("change",[!0])})),$item},constructModal:function(){var _this=this;this.settings.modalHTML&&(this.$modal=$(this.settings.modalHTML),this.$modal.on("click.multiselect",(function(){_this.menuHide()})),this.$modal.insertBefore(this.$menu))},setUpBodyClickListener:function(){var _this=this;$("html").on("click.multiselect",(function(){_this.menuHide()})),this.$container.on("click.multiselect",(function(e){e.stopPropagation()}))},setUpLabelsClickListener:function(){var _this=this;this.$labels.on("click.multiselect",(function(e){e.preventDefault(),e.stopPropagation(),_this.menuToggle()}))},menuShow:function(){if(this.updateItemsState(!0),$("html").trigger("click.multiselect"),this.$container.addClass(this.settings.activeClass),this.settings.positionMenuWithin&&this.settings.positionMenuWithin instanceof $){var menuLeftEdge=this.$menu.offset().left+this.$menu.outerWidth(),withinLeftEdge=this.settings.positionMenuWithin.offset().left+this.settings.positionMenuWithin.outerWidth();menuLeftEdge>withinLeftEdge&&(this.$menu.css("width",withinLeftEdge-this.$menu.offset().left),this.$container.addClass(this.settings.positionedMenuClass))}var menuBottom=this.$menu.offset().top+this.$menu.outerHeight(),viewportBottom=$(window).scrollTop()+$(window).height();menuBottom>viewportBottom-this.settings.viewportBottomGutter?this.$menu.css({maxHeight:Math.max(viewportBottom-this.settings.viewportBottomGutter-this.$menu.offset().top,this.settings.menuMinHeight),overflow:"scroll"}):this.$menu.css({maxHeight:"",overflow:""})},menuHide:function(){var hasStateChanged;this.$container.hasClass(this.settings.activeClass)&&(this.updateItemsState(!1),this.itemsLoadState.toString()!==this.itemsCloseState.toString()&&void 0!==this.settings.onClose&&this.settings.onClose());this.$container.removeClass(this.settings.activeClass),this.$container.removeClass(this.settings.positionedMenuClass),this.$menu.css("width","auto")},menuToggle:function(){this.$container.hasClass(this.settings.activeClass)?this.menuHide():this.menuShow()}}),$.fn.multiSelect=function(options){var _this=this;return this.each((function(){$.data(this,"plugin_multiSelect")||$.data(this,"plugin_multiSelect",new MultiSelect(this,options))})),{reload:function(){$("[data-instance = "+dataAttrName+"]").remove(),dataAttrName="multiselect_"+Math.floor(10001*Math.random()),$.data(_this,"plugin_multiSelect",new MultiSelect(_this,options))}}}}(jQuery);